version: "3.9"
services:
  db:
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      PGDATA: "/var/lib/postgresql/data/pgdata"
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U master -d db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    image: '${DOCKER_IMAGE_BACKEND?Variable not set}:${TAG-latest}'
    container_name: '${DOCKER_IMAGE_BACKEND?Variable not set}'
    depends_on:
      - db
    env_file:
      - .env
    ports:
      - "8080:8080"
    restart: always
    build:
      context: .
      dockerfile: backend.Dockerfile

  grafana:
    image: grafana/grafana
    container_name: grafana
    env_file:
      - .env
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus

  prometheus:
      image: prom/prometheus
      container_name: prometheus
      ports:
        - "9090:9090"
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--storage.tsdb.retention.time=200h'
        - '--web.enable-lifecycle'
      volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      restart: unless-stopped

volumes:
  app-db-data:
  grafana-storage:
